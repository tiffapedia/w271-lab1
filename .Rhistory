x="Class of Vehicle",
y="City Mileage")
ggplot(Mroz, aes(factor(lwg), lfp)) +
geom_boxplot(aes(fill = factor(lwg))) +
geom_jitter() +
ggtitle("Log Wage in Buckets") +
theme(plot.title = element_text(lineheight=1, face="bold"))
ggplot(Mroz, aes(factor(lwg_buckets), lfp)) +
geom_boxplot(aes(fill = factor(lwg_buckets))) +
geom_jitter() +
ggtitle("Log Wage in Buckets") +
theme(plot.title = element_text(lineheight=1, face="bold"))
ggplot(Mroz, aes(factor(lwg_buckets), lfp)) +
geom_jitter() +
ggtitle("Log Wage in Buckets") +
theme(plot.title = element_text(lineheight=1, face="bold"))
ggplot(Mroz, aes(factor(lwg_buckets), lfp)) +
#geom_jitter() +
ggtitle("Log Wage in Buckets") +
theme(plot.title = element_text(lineheight=1, face="bold"))
ggplot(Mroz, aes(factor(lwg_buckets), lfp)) +
geom_boxplot(aes(fill = factor(lwg_buckets))) +
#geom_jitter() +
ggtitle("Log Wage in Buckets") +
theme(plot.title = element_text(lineheight=1, face="bold"))
CrossTable(Mroz$lfp, Mroz$inc_buckets)
CrossTable(Mroz$lfp, Mroz$lwg_buckets)
CrossTable(Mroz$lfp, Mroz$lwg_quartile)
CrossTable(Mroz$lfp, Mroz$inc_quartile)
CrossTable(Mroz$lfp, Mroz$hc)
CrossTable(Mroz$lfp, Mroz$wc)
Mroz %>%
ggplot(aes(x = factor(lwg_quartile), fill = factor(lwg_quartile))) +
geom_bar() +
facet_wrap(~lfp)
n <-ggplot(Mroz, aes(x=lwg)) + geom_area(stat = "bin", fill = "lightblue") + geom_vline(aes(xintercept = mean(lwg), color="red", linetype="dashed"))
n
Mroz %>%
ggplot(aes(x = factor(wc), fill = factor(wc))) +
geom_bar() +
facet_wrap(~lfp)
Mroz %>%
ggplot(aes(x = factor(hc), fill = factor(hc))) +
geom_bar() +
facet_wrap(~lfp)
Mroz %>%
ggplot(aes(x = factor(hc), fill = factor(hc))) +
geom_density(alpha = 0.2) +
facet_wrap(~lfp)
Mroz %>%
ggplot(aes(x = factor(hc), fill = factor(hc))) +
geom_bar() +
facet_wrap(~lfp)
Mroz %>%
ggplot(aes(x = factor(lwg_quartile), fill = factor(lwg_quartile))) +
geom_bar() +
facet_wrap(~lfp)
Mroz %>%
ggplot(aes(x = factor(inc_quartile), fill = factor(inc_quartile))) +
geom_bar() +
facet_wrap(~lfp)
corrplot(cormroz, method = "ellipse")
par(mfrow=c(2,2))
plot(mroz.lm)
require(car)
par(mfrow=c(1,1))
residualPlots(mroz.lm)
# Another way to diagnose linearity assumptions
scatterplot(as.numeric(Mroz$lfp), mroz.lm$fitted.values)
# Note that I didn't pay much attention to outliers and influential observations in this specific example
# Evaluate Nonlinearity
# component + residual plot
#crPlots(mroz.lm)
# Ceres plots
#ceresPlots(mroz.lm)
#str(mroz.lm)
summary(mroz.lm$fitted.values)
par(mfrow=c(1,1))
plot(mroz.lm$residuals, main="Autocorrelation Function of Model Residuals")
acf(mroz.lm$residuals, main="Autocorrelation Function of Model Residuals")
hist(mroz.lm$residuals)
qqnorm(mroz.lm$residuals)
qqline(mroz.lm$residuals)
scatterplot(mroz.lm$fitted.values, mroz.lm$residuals,
smoother = loessLine, cex = 0.5, pch = 19,
smoother.args = list(lty = 1, lwd = 5),
main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab ="Residuals")
mroz.lm <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + inc, data = Mroz)
summary(mroz.lm)
mroz.lm2 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + linc, data = Mroz)
mroz.lm <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + inc, data = Mroz)
summary(mroz.lm)
mroz.lm2 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + linc, data = Mroz)
summary(mroz.lm2)
mroz.lm2 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + linc, data = Mroz)
summary(mroz.lm2)
mroz.lm <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + inc, data = Mroz)
summary(mroz.lm)
mroz.lm2 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + linc, data = Mroz)
summary(mroz.lm2)
par(mfrow=c(2,2))
plot(mroz.lm)
require(car)
par(mfrow=c(1,1))
residualPlots(mroz.lm)
# Another way to diagnose linearity assumptions
scatterplot(as.numeric(Mroz$lfp), mroz.lm$fitted.values)
# Note that I didn't pay much attention to outliers and influential observations in this specific example
# Evaluate Nonlinearity
# component + residual plot
crPlots(mroz.lm)
# Ceres plots
ceresPlots(mroz.lm)
par(mfrow=c(2,2))
plot(mroz.lm)
require(car)
par(mfrow=c(1,1))
residualPlots(mroz.lm)
# Another way to diagnose linearity assumptions
scatterplot(as.numeric(Mroz$lfp), mroz.lm$fitted.values)
# Note that I didn't pay much attention to outliers and influential observations in this specific example
# Evaluate Nonlinearity
# component + residual plot
crPlots(mroz.lm)
# Ceres plots
#ceresPlots(mroz.lm)
#str(mroz.lm)
summary(mroz.lm$fitted.values)
par(mfrow=c(1,1))
plot(mroz.lm$residuals, main="Autocorrelation Function of Model Residuals")
acf(mroz.lm$residuals, main="Autocorrelation Function of Model Residuals")
hist(mroz.lm$residuals)
qqnorm(mroz.lm$residuals)
qqline(mroz.lm$residuals)
scatterplot(mroz.lm$fitted.values, mroz.lm$residuals,
smoother = loessLine, cex = 0.5, pch = 19,
smoother.args = list(lty = 1, lwd = 5),
main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab ="Residuals")
mroz.lm3 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg_quartile + inc, data = Mroz)
summary(mroz.lm3)
shapiro.test(mroz.lm$residuals)
ncvTest(mroz.lm)
View(Mroz)
mroz.lm4 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + I(lwg_quartile^(.5)) + inc, data = Mroz)
mroz.lm4 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg_quartile^(.5) + inc, data = Mroz)
mroz.lm4 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + sqrt(lwg_quartile) + inc, data = Mroz)
mroz.lm4 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + sqrt(lwg) + inc, data = Mroz)
summary(mroz.lm4)
summary(mroz.lm3)
summary(mroz.lm)
summary(mroz.lm4)
summary(mroz.lm)
mroz.lm4 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + sqrt(inc), data = Mroz)
summary(mroz.lm4)
summary(mroz.lm)
mroz.lm4 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + lwg + I(inc^2), data = Mroz)
summary(mroz.lm4)
mroz.lm4 <- lm(as.numeric(lfp) ~ k5 + k618 + age + wc + hc + I(lwg^2) + inc, data = Mroz)
summary(mroz.lm4)
setwd("~/Google Drive/Data Science/W271/Lab1")
setwd("~/Google Drive/Data Science/W271/Lab1")
challenger <- read.table(file = "challenger.csv", header=TRUE, sep=",")
setwd("~/Google Drive/Data Science/W271/Lab1/dataset/")
challenger <- read.table(file = "challenger.csv", header=TRUE, sep=",")
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
challenger <- read.csv(file = "challenger.csv", header=TRUE, sep=",")
setwd("~/Google Drive/Data Science/W271/Lab1/dataset/")
setwd("~/Google Drive/Data Science/W271/Lab1/dataset/")
challenger <- read.table(file = "challenger.csv", header=TRUE, sep=",")
setwd("~/Google Drive/Data Science/W271/Lab1/dataset/")
challenger <- read.table(file = "challenger.csv", header=TRUE, sep=",")
summary(challenger)
View(challenger)
View(challenger)
plot(x = challenger$Temp, y =challenger$O.ring, ylab='Number of O-ring failures', xlab='Temp(F)',
main = 'Joint Temperature Versus Number of O-Ring Failures', xlim=c(50,80), ylim=c(0,3))
library(ggplot2)
# temperature by o-ring failure
ggplot(challenger, aes(factor(O.ring), Temp)) +
geom_boxplot(aes(fill = factor(O.ring))) +
geom_jitter() +
ggtitle("Temperature by O-Ring Failure") +
theme(plot.title = element_text(lineheight=1, face="bold"))
plot(x = challenger$Pressure, y =challenger$O.ring, ylab='Number of O-ring failures', xlab='Pressure(psi)', main = 'Combustion Pressure Versus Number of O-Ring Failures', xlim=c(50,200), ylim=c(0,3))
library(ggplot2)
data(mtcars)
plotmatrix(mtcars[,1:3])
View(mtcars)
View(mtcars)
View(challenger)
pairs(challenger[, 2:4])
pairs(challenger[, 2:4], col=challenger$O.ring)
library(ggplot2)
# temperature by o-ring failure
ggplot(challenger, aes(factor(O.ring), Temp)) +
geom_boxplot(aes(fill = factor(O.ring))) +
geom_jitter() +
ggtitle("Temperature by O-Ring Failure") +
theme(plot.title = element_text(lineheight=1, face="bold"))
plot(x = challenger$Pressure, y =challenger$O.ring, ylab='Number of O-ring failures', xlab='Pressure(psi)', main = 'Combustion Pressure Versus Number of O-Ring Failures', xlim=c(50,200), ylim=c(0,3))
ggplot(challenger, aes(factor(O.ring), Pressure)) +
geom_boxplot(aes(fill = factor(O.ring))) +
geom_jitter() +
ggtitle("Pressure by O-Ring Failure") +
theme(plot.title = element_text(lineheight=1, face="bold"))
library(corrplot)
library(gmodels)
library(MASS)
continuous_data = Mroz[, c(2:4, 7:8)]
library(car)
library(dplyr)
library(Hmisc)
str(Mroz)
glimpse(Mroz) # glimpse can be use for any data.frame or table in R
#View(Mroz)
head(Mroz, 5)
some(Mroz, 5)
tail(Mroz, 5)
describe(Mroz)
summary(Mroz)
library(corrplot)
library(gmodels)
library(MASS)
continuous_data = Mroz[, c(2:4, 7:8)]
cormroz <- cor(continuous_data)
###
corrplot(cormroz, method = "ellipse")
#corrplot shows some negative correltion between age and having kids
###Cut ~ normal continuous data by buckets: buckets is handpicked linearly, and quartiles are proportioned
n <-ggplot(Mroz, aes(x=lwg)) + geom_area(stat = "bin", fill = "lightblue") + geom_vline(aes(xintercept = mean(lwg), color="red", linetype="dashed"))
n
Mroz$lwg_buckets <- cut(Mroz$lwg, breaks=c(-3:4))
Mroz$lwg_quartile <- with(Mroz, cut2(lwg, g = 4))
m <-ggplot(Mroz, aes(x=inc)) + geom_area(stat = "bin", fill = "lightblue") + geom_vline(aes(xintercept = mean(inc), color="red", linetype="dashed"))
m
Mroz$inc_buckets <- cut(Mroz$inc, breaks=seq(0, 100, 25), labels = FALSE)
Mroz$inc_quartile <- with(Mroz, cut2(inc, g = 4))
#Income looks right skewed -> take log?
Mroz$linc <- log(Mroz$inc)
### is one variable more predictive of LFP?
#slightly higher signal between women's college and lfp
CrossTable(Mroz$lfp, Mroz$wc)
CrossTable(Mroz$lfp, Mroz$hc)
#same thing in graphical form
Mroz %>%
ggplot(aes(x = factor(wc), fill = factor(wc))) +
geom_bar() +
facet_wrap(~lfp)
Mroz %>%
ggplot(aes(x = factor(hc), fill = factor(hc))) +
geom_bar() +
facet_wrap(~lfp)
#crosstabe between lfp and lwg_quartile reveals some variation in the 2nd and 4th buckets, not as much for inc_quartile
CrossTable(Mroz$lfp, Mroz$lwg_quartile)
CrossTable(Mroz$lfp, Mroz$inc_quartile)
Mroz %>%
ggplot(aes(x = factor(lwg_quartile), fill = factor(lwg_quartile))) +
geom_bar() +
facet_wrap(~lfp)
Mroz %>%
ggplot(aes(x = factor(inc_quartile), fill = factor(inc_quartile))) +
geom_bar() +
facet_wrap(~lfp)
challenger %>%
ggplot(aes(x = factor(O.ring), fill = factor(O.ring))) +
geom_bar() +
facet_wrap(~Pressure)
challenger %>%
ggplot(aes(x = factor(Pressure), fill = factor(O.ring))) +
geom_bar() +
facet_wrap(~O.Ring)
challenger %>%
ggplot(aes(x = factor(Pressure), fill = factor(O.ring))) +
geom_bar() +
facet_wrap(~O.ring)
challenger %>%
ggplot(aes(x = factor(O.ring), fill = factor(O.ring))) +
geom_bar() +
facet_wrap(~Pressure)
rm(list = ls())
library(car)
require(dplyr)
library(Hmisc)
library(stargazer)
install.packages("stargazer")
library("stargazer", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
rm(list = ls())
library(car)
require(dplyr)
library(Hmisc)
library(stargazer)
Mroz$totalKids <- Mroz$k5 + Mroz$k618
mroz.glm <- glm(lfp ~ totalKids + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
mroz.interact.glm <- glm(lfp ~ totalKids + age + wc + hc + lwg + inc
+ wc:age,
family = 'binomial', data = Mroz)
stargazer(mroz.glm, mroz.interact.glm, type = 'text')
exp(-0.035)
exp(-0.047)
exp(-0.035)
1/exp(-0.035)
1/exp(-0.047)
rm(list = ls())
library(car)
require(dplyr)
library(Hmisc)
library(stargazer)
Mroz$totalKids <- Mroz$k5 + Mroz$k618
mroz.glm <- glm(lfp ~ totalKids + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
mroz.interact.glm <- glm(lfp ~ totalKids + age + wc + hc + lwg + inc
+ wc:age,
family = 'binomial', data = Mroz)
stargazer(mroz.glm, mroz.interact.glm, type = 'text')
c(exp(mroz.glm$coefficients[3]-1.96*0.012), exp(mroz.glm$coefficients[3]+1.96*0.012))
1/c(exp(mroz.glm$coefficients[3]-1.96*0.012), exp(mroz.glm$coefficients[3]+1.96*0.012))
1/c(exp(mroz.glm$coefficients[3]+1.96*0.012), exp(mroz.glm$coefficients[3]-1.96*0.012))
1/c(exp(mroz.interact.glm[3]+1.96*0.012), exp(mroz.interact.glm[3]-1.96*0.012))
1/c(exp(mroz.interact.glm[3]+1.96*0.013), exp(mroz.interact.glm[3]-1.96*0.013))
mroz.interact.glm[3]
1/c(exp(mroz.interact.glm$coefficients[3]+1.96*0.013), exp(mroz.interact.glm$coefficients[3]-1.96*0.013))
#model1 - range is exclusively above 1, significant relationship of age on lfp
1/c(exp(mroz.glm$coefficients[3]+1.96*0.012), exp(mroz.glm$coefficients[3]-1.96*0.012))
#model2 - range is exclusively above 1, significant relationship of age on lfp
1/c(exp(mroz.interact.glm$coefficients[3]+1.96*0.013), exp(mroz.interact.glm$coefficients[3]-1.96*0.013))
Anova(mroz.glm, test = "LR")
Anova((mroz.interact.glm, test = "LR")
Anova(mroz.interact.glm, test = "LR")
Anova(mroz.glm, test = "LR")
Anova(mroz.interact.glm, test = "LR")
rm(list = ls())
library(car)
require(dplyr)
library(Hmisc)
library(stargazer)
Mroz$totalKids <- Mroz$k5 + Mroz$k618
mroz.glm <- glm(lfp ~ totalKids + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
mroz.interact.glm <- glm(lfp ~ totalKids + age + wc + hc + lwg + inc
+ wc:age,
family = 'binomial', data = Mroz)
stargazer(mroz.glm, mroz.interact.glm, type = 'text')
1/exp(-0.035*10)
1/exp(-0.002*10)
1/exp(-0.047*10)
1/exp(-0.035*10)
summary(mroz.glm)
rm(list = ls())
library(car)
require(dplyr)
library(Hmisc)
library(stargazer)
Mroz$totalKids <- Mroz$k5 + Mroz$k618
mroz.glm <- glm(lfp ~ totalKids + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
mroz.interact.glm <- glm(lfp ~ totalKids + age + wc + hc + lwg + inc
+ wc:age,
family = 'binomial', data = Mroz)
stargazer(mroz.glm, mroz.interact.glm, type = 'text')
anova(mroz.glm, mroz.interact.glm, test = "Chisq")
# If the models are not nested, we can compare the AIC values
AIC(mroz.glm, mroz.interact.glm)
mroz.old.glm <- glm(lfp ~ k5 + k618 + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
summary(mroz.old.glm)
mroz.old.glm <- glm(lfp ~ k5 + k618 + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
summary(mroz.old.glm)
## The right way to do it
newdf <- data.frame(k5 = 0,
k618 = 0,
age = seq(from = 30, to = 60, by = 1),
wc = 'no',
hc = 'no',
lwg = mean(Mroz$lwg),
inc = mean(Mroz$inc))
lp.hat <- predict.glm(mroz.old.glm, newdata = newdf, type = "link", se.fit = TRUE)
head(lp.hat)
lp.hat.mean <- lp.hat$fit
lp.hat.lci <- lp.hat$fit - 1.96 * lp.hat$se.fit
lp.hat.uci <- lp.hat$fit + 1.96 * lp.hat$se.fit
pi.hat <- exp(lp.hat.mean) / (1 + exp(lp.hat.mean))
pi.hat.lci <- exp(lp.hat.lci) / (1 + exp(lp.hat.lci))
pi.hat.uci <- exp(lp.hat.uci) / (1 + exp(lp.hat.uci))
### Plot predicted probabilities
age <- newdf$age
plot(age, pi.hat, ylim = range(c(pi.hat.lci, pi.hat.uci)),
xlab = "Age", ylab = "Predicted Prob of LFP = 1", type = 'l', col = 'red', lwd = 2)
lines(age, pi.hat.lci, col = 'red', lwd = 0.5)
lines(age, pi.hat.uci, col = 'red', lwd = 0.5)
#### The wrong way
pi.hat.response <- predict.glm(mroz.old.glm, newdf, type = "response", se.fit = TRUE)
pi.hat.response.lci <- pi.hat.response$fit - 1.96*pi.hat.response$se.fit
pi.hat.response.uci <- pi.hat.response$fit + 1.96*pi.hat.response$se.fit
plot(age, pi.hat.response$fit, ylim = range(c(pi.hat.response.lci, pi.hat.response.uci)),
xlab = "Age", ylab = "Predicted Prob of LFP = 1", type = 'l', col = 'red', lwd = 2)
lines(age, pi.hat.response.lci, col = 'red', lwd = 0.5)
lines(age, pi.hat.response.uci, col = 'red', lwd = 0.5)
lp.hat <- predict.glm(mroz.old.glm, newdata = newdf, type = "link", se.fit = TRUE)
head(lp.hat)
View(newdf)
lp.hat$se.fit
pi.hat.response$se.fit
lp.hat.mean <- lp.hat$fit
lp.hat.lci <- lp.hat$fit - 1.96 * lp.hat$se.fit
lp.hat.uci <- lp.hat$fit + 1.96 * lp.hat$se.fit
pi.hat <- exp(lp.hat.mean) / (1 + exp(lp.hat.mean))
pi.hat.lci <- exp(lp.hat.lci) / (1 + exp(lp.hat.lci))
pi.hat.uci <- exp(lp.hat.uci) / (1 + exp(lp.hat.uci))
mroz.old.glm <- glm(lfp ~ k5 + k618 + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
summary(mroz.old.glm)
## The right way to do it
newdf <- data.frame(k5 = 0,
k618 = 0,
age = seq(from = 30, to = 60, by = 1),
wc = 'no',
hc = 'no',
lwg = mean(Mroz$lwg),
inc = mean(Mroz$inc))
lp.hat <- predict.glm(mroz.old.glm, newdata = newdf, type = "link", se.fit = TRUE)
head(lp.hat)
lp.hat.mean <- lp.hat$fit
lp.hat.lci <- lp.hat$fit - 1.96 * lp.hat$se.fit
lp.hat.uci <- lp.hat$fit + 1.96 * lp.hat$se.fit
pi.hat <- exp(lp.hat.mean) / (1 + exp(lp.hat.mean))
pi.hat.lci <- exp(lp.hat.lci) / (1 + exp(lp.hat.lci))
pi.hat.uci <- exp(lp.hat.uci) / (1 + exp(lp.hat.uci))
### Plot predicted probabilities
age <- newdf$age
plot(age, pi.hat, ylim = range(c(pi.hat.lci, pi.hat.uci)),
xlab = "Age", ylab = "Predicted Prob of LFP = 1", type = 'l', col = 'red', lwd = 2)
lines(age, pi.hat.lci, col = 'red', lwd = 0.5)
lines(age, pi.hat.uci, col = 'red', lwd = 0.5)
#### The wrong way
pi.hat.response <- predict.glm(mroz.old.glm, newdf, type = "response", se.fit = TRUE)
pi.hat.response.lci <- pi.hat.response$fit - 1.96*pi.hat.response$se.fit
pi.hat.response.uci <- pi.hat.response$fit + 1.96*pi.hat.response$se.fit
plot(age, pi.hat.response$fit, ylim = range(c(pi.hat.response.lci, pi.hat.response.uci)),
xlab = "Age", ylab = "Predicted Prob of LFP = 1", type = 'l', col = 'red', lwd = 2)
lines(age, pi.hat.response.lci, col = 'red', lwd = 0.5)
lines(age, pi.hat.response.uci, col = 'red', lwd = 0.5)
mroz.old.glm <- glm(lfp ~ k5 + k618 + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
summary(mroz.old.glm)
## The right way to do it
newdf <- data.frame(k5 = 4,
k618 = 0,
age = seq(from = 30, to = 60, by = 1),
wc = 'no',
hc = 'no',
lwg = mean(Mroz$lwg),
inc = mean(Mroz$inc))
lp.hat <- predict.glm(mroz.old.glm, newdata = newdf, type = "link", se.fit = TRUE)
head(lp.hat)
lp.hat.mean <- lp.hat$fit
lp.hat.lci <- lp.hat$fit - 1.96 * lp.hat$se.fit
lp.hat.uci <- lp.hat$fit + 1.96 * lp.hat$se.fit
pi.hat <- exp(lp.hat.mean) / (1 + exp(lp.hat.mean))
pi.hat.lci <- exp(lp.hat.lci) / (1 + exp(lp.hat.lci))
pi.hat.uci <- exp(lp.hat.uci) / (1 + exp(lp.hat.uci))
### Plot predicted probabilities
age <- newdf$age
plot(age, pi.hat, ylim = range(c(pi.hat.lci, pi.hat.uci)),
xlab = "Age", ylab = "Predicted Prob of LFP = 1", type = 'l', col = 'red', lwd = 2)
lines(age, pi.hat.lci, col = 'red', lwd = 0.5)
lines(age, pi.hat.uci, col = 'red', lwd = 0.5)
#### The wrong way
pi.hat.response <- predict.glm(mroz.old.glm, newdf, type = "response", se.fit = TRUE)
pi.hat.response.lci <- pi.hat.response$fit - 1.96*pi.hat.response$se.fit
pi.hat.response.uci <- pi.hat.response$fit + 1.96*pi.hat.response$se.fit
plot(age, pi.hat.response$fit, ylim = range(c(pi.hat.response.lci, pi.hat.response.uci)),
xlab = "Age", ylab = "Predicted Prob of LFP = 1", type = 'l', col = 'red', lwd = 2)
lines(age, pi.hat.response.lci, col = 'red', lwd = 0.5)
lines(age, pi.hat.response.uci, col = 'red', lwd = 0.5)
mroz.old.glm <- glm(lfp ~ k5 + k618 + age + wc + hc + lwg + inc,
family = 'binomial', data = Mroz)
summary(mroz.old.glm)
## The right way to do it
newdf <- data.frame(k5 = 4,
k618 = 0,
age = seq(from = 30, to = 60, by = 1),
wc = 'no',
hc = 'no',
lwg = mean(Mroz$lwg),
inc = mean(Mroz$inc))
lp.hat <- predict.glm(mroz.old.glm, newdata = newdf, type = "link", se.fit = TRUE)
head(lp.hat)
lp.hat.mean <- lp.hat$fit
lp.hat.lci <- lp.hat$fit - 1.96 * lp.hat$se.fit
lp.hat.uci <- lp.hat$fit + 1.96 * lp.hat$se.fit
pi.hat <- exp(lp.hat.mean) / (1 + exp(lp.hat.mean))
pi.hat.lci <- exp(lp.hat.lci) / (1 + exp(lp.hat.lci))
pi.hat.uci <- exp(lp.hat.uci) / (1 + exp(lp.hat.uci))
### Plot predicted probabilities
age <- newdf$age
plot(age, pi.hat, ylim = range(c(pi.hat.lci, pi.hat.uci)),
xlab = "Age", ylab = "Predicted Prob of LFP = 1", type = 'l', col = 'red', lwd = 2)
lines(age, pi.hat.lci, col = 'red', lwd = 0.5)
lines(age, pi.hat.uci, col = 'red', lwd = 0.5)
#### The wrong way
pi.hat.response <- predict.glm(mroz.old.glm, newdf, type = "response", se.fit = TRUE)
pi.hat.response.lci <- pi.hat.response$fit - 1.96*pi.hat.response$se.fit
pi.hat.response.uci <- pi.hat.response$fit + 1.96*pi.hat.response$se.fit
plot(age, pi.hat.response$fit, ylim = range(c(pi.hat.response.lci, pi.hat.response.uci)),
xlab = "Age", ylab = "Predicted Prob of LFP = 1", type = 'l', col = 'red', lwd = 2)
lines(age, pi.hat.response.lci, col = 'red', lwd = 0.5)
lines(age, pi.hat.response.uci, col = 'red', lwd = 0.5)
